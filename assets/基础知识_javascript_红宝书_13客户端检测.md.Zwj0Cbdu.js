import{_ as a,c as e,o as t,a5 as i}from"./chunks/framework.DcGi6Jq3.js";const m=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"基础知识/javascript/红宝书/13客户端检测.md","filePath":"基础知识/javascript/红宝书/13客户端检测.md","lastUpdated":1723452346000}'),l={name:"基础知识/javascript/红宝书/13客户端检测.md"},r=i('<h2 id="客户端检测" tabindex="-1">客户端检测 <a class="header-anchor" href="#客户端检测" aria-label="Permalink to &quot;客户端检测&quot;">​</a></h2><ul><li>浏览器之间存在诸多差异，每家浏览器都有自己的长处和不足。</li><li>检测客户端，建立一个最大公约数，最大程度上克服或避免这些缺陷。</li><li>客户端检测一直饱受争议，浏览器之间的差异行为，让客户端检测变成一种补救措施，却成了开发策略。</li><li>首先选用普遍的方案，然后考虑特定浏览器的补救。</li></ul><h2 id="用户代理检测" tabindex="-1">用户代理检测 <a class="header-anchor" href="#用户代理检测" aria-label="Permalink to &quot;用户代理检测&quot;">​</a></h2><ul><li>该检测方式非常不可靠，由于存在伪装的可能性。</li></ul><h2 id="能力检测" tabindex="-1">能力检测 <a class="header-anchor" href="#能力检测" aria-label="Permalink to &quot;能力检测&quot;">​</a></h2><ul><li>是目前最有效的解决方案</li><li>能力检测更精准的反映了浏览器能力或版本。</li></ul>',6),o=[r];function _(s,c,n,d,h,u){return t(),e("div",null,o)}const f=a(l,[["render",_]]);export{m as __pageData,f as default};
